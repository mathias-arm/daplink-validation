name: Release build
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Cache Embedded Arm Toolchain
      id:   cache-arm-gcc
      uses: actions/cache@v2
      env:
        cache-name: arm-gcc-9-2020-q2
      with:
        path: ${{ runner.temp }}/arm-gcc
        key:  ${{ runner.os }}-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Cache Python modules
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('mbed-os.lib') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Checkout source files
      uses: actions/checkout@v2

    - name: Install Embedded Arm Toolchain
      if:   steps.cache-arm-gcc.outputs.cache-hit != 'true'
      run:  |
        curl -O -L https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2
        md5sum gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2
        echo Installing  in ${{ runner.temp }}/arm-gcc
        mkdir -p ${{ runner.temp }}/arm-gcc
        tar jvxf gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2 -C ${{ runner.temp }}/arm-gcc --strip-components 1

    - name: Compile
      run:  |
        export PATH="${{ runner.temp }}/arm-gcc/bin/:/home/runner/.local/bin:$PATH"
        pip install mbed-cli
        mbed config root .
        mbed toolchain GCC_ARM
        mbed deploy
        make

    - name: Package
      run:  |
        mv dist daplink-validation
        zip -r daplink-validation-${GITHUB_REF##*/}.zip daplink-validation

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files:  |
          daplink-validation-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
